local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local humanoid = char:WaitForChild("Humanoid")

-- Store original colors
local originalColors = {}
for _, part in pairs(char:GetDescendants()) do
	if part:IsA("BasePart") then
		originalColors[part] = part.Color
	end
end

-- Glitch effect
RunService.RenderStepped:Connect(function()
	for _, part in pairs(char:GetDescendants()) do
		if part:IsA("BasePart") then
			-- Small position jitter
			local offset = Vector3.new(
				math.random(-2, 2) / 100,
				math.random(-2, 2) / 100,
				math.random(-2, 2) / 100
			)
			part.CFrame = part.CFrame * CFrame.new(offset)

			-- Flicker transparency
			if math.random(1, 20) == 1 then
				part.Transparency = 0.5 + math.random() * 0.5
			else
				part.Transparency = 0
			end

			-- Random color flicker
			if math.random(1, 15) == 1 then
				part.Color = Color3.fromRGB(
					math.random(50, 255),
					math.random(50, 255),
					math.random(50, 255)
				)
			else
				part.Color = originalColors[part] or part.Color
			end
		end
	end
end)